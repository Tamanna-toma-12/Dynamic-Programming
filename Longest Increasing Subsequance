  int dp[2510][2510];
  int solve(int i,int j,vector<int>& nums,int n){
      if(i>n)return 0;
      if(dp[i][j]!=-1)return dp[i][j];
      int ret1=0,ret2=0;
      ret1=solve(i+1,j,nums,n);
      if(nums[j]<nums[i]){
          ret2=max(solve(i+1,j,nums,n),solve(i+1,i,nums,n)+1);
      }
      return dp[i][j]=max(ret1,ret2);
  }
    int lengthOfLIS(vector<int>& nums) {
        int n=nums.size();
        vector<int>a(n+5);
        for(int i=0;i<nums.size();i++){
            a[i+1]=nums[i];
        }
        a[0]=-100000;
        memset(dp,-1,sizeof(dp));
        int ans=solve(1,0,a,n);
        return ans;
    }
