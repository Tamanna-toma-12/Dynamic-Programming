#include <bits/stdc++.h> 
int solve(int i,int j,string s,string t,vector<vector<int>>&dp){
	if(i<=0||j<=0)return 0;
	if(dp[i][j]!=-1)return dp[i][j];
	if(s[i-1]==t[j-1]){
		return dp[i][j]=1+solve(i-1,j-1,s,t,dp);
	}
	else{
		return dp[i][j]=max(solve(i,j-1,s,t,dp),solve(i-1,j,s,t,dp));
	}
}
string shortestSupersequence(string a, string b)
{
	// Write your code here.
	int n=a.size();
	int m=b.size();
	vector<vector<int>>dp(n+1,vector<int>(m+1,-1));
	int x=solve(n,m,a,b,dp);
	string ans="";
    int i=n,j=m;
    while(i>0&&j>0){
         if(a[i-1]==b[j-1]){
			 ans+=a[i-1];
			 i--;
			 j--;
		 }
		 else if(dp[i][j-1]>dp[i-1][j]){
			 ans+=b[j-1];
			 j--;
		 }
		 else{
			 ans+=a[i-1];
			 i--;
		 }
	}
	while(i>0){
		ans+=a[i-1];
		i--;
	}
	while(j>0){
		ans+=b[j-1];
		j--;
	}
	//cout<<ans<<endl;
	reverse(ans.begin(),ans.end());
	return ans;
}
